#include "EnemyManager.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Default constructor. </summary>
///
/// <remarks>	Rache, 23-Apr-18. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

EnemyManager::EnemyManager()
{
	
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Fill list. </summary>
///
/// <remarks>	Rache, 23-Apr-18. </remarks>
///
/// <param name="smgr">	[in,out] If non-null, the smgr. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void EnemyManager::FillList(scene::ISceneManager* smgr) {
	/// <summary>	The nodes. </summary>
	core::array<scene::ISceneNode *> nodes;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Find all nodes. </summary>
	///
	/// <remarks>	Rache, 23-Apr-18. </remarks>
	///
	/// <param name="scene::ESNT_ANY, nodes">	The first parameter. </param>
	/// <param name="nodes">	The second parameter. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	smgr->getSceneNodesFromType(scene::ESNT_ANY, nodes); 

	for (u32 i = 0; i < nodes.size(); ++i)
	{
		scene::ISceneNode * node = nodes[i];

		switch (node->getID())
		{
		case 17:
			test.push_back(node);
			break;
		}
	}

	//test.push_back(meme);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Check collision. </summary>
///
/// <remarks>	Rache, 23-Apr-18. </remarks>
///
/// <param name="test">	[in,out] If non-null, the test. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void EnemyManager::CheckCollision(scene::ISceneNode* test) {
	//for(int i = 0; i < test.size)
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Rache, 23-Apr-18. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

EnemyManager::~EnemyManager()
{
}
