////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	EnemyManager.h
//
// summary:	Declares the enemy manager class
////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#ifndef EnemyManager_H
#define EnemyManager_H

#include <irrlicht.h>
#include <list>
//#include <vector>


////////////////////////////////////////////////////////////////////////////////////////////////////
// namespace: std
//
// summary:	.
////////////////////////////////////////////////////////////////////////////////////////////////////

using namespace std;
using namespace irr;

class EnemyManager 
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Default constructor. </summary>
	///
	/// <remarks>	Rache, 23-Apr-18. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	EnemyManager();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Check collision. </summary>
	///
	/// <remarks>	Rache, 23-Apr-18. </remarks>
	///
	/// <param name="collidedObject">	[in,out] If non-null, the collided object. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void CheckCollision(scene::ISceneNode* collidedObject);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Fill list. </summary>
	///
	/// <remarks>	Rache, 23-Apr-18. </remarks>
	///
	/// <param name="smgr">	[in,out] If non-null, the smgr. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void FillList(scene::ISceneManager* smgr);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Destructor. </summary>
	///
	/// <remarks>	Rache, 23-Apr-18. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	~EnemyManager();
	/// <summary>	The test. </summary>
	list<scene::ISceneNode*> test;
};

#endif